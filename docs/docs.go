// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-11-13 11:07:19.161448008 +0800 CST m=+0.042755597

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/matter": {
            "get": {
                "tags": [
                    "matter"
                ],
                "summary": "获取所有事项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/matter.ListResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "matter"
                ],
                "summary": "创建事项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/matter.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/matter/{id}": {
            "get": {
                "tags": [
                    "matter"
                ],
                "summary": "查看事项详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "matter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/matter.GetResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "matter"
                ],
                "summary": "修改事项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "matter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/matter.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "matter"
                ],
                "summary": "删除事项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "matter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/matter/{id}/finish": {
            "put": {
                "tags": [
                    "matter"
                ],
                "summary": "完成/取消完成事项",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "matter id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/matter.FinishPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/matter.FinishPayload"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "获取用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "matter.CreateRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "date": {
                    "description": "设定的日期：2020-11-01",
                    "type": "string"
                },
                "priority": {
                    "description": "优先级，0/1/2/3 =\u003e 无优先级/低优先级/中优先级/高优先级",
                    "type": "integer"
                },
                "state": {
                    "description": "状态：0/1/2 =\u003e 未完成/已完成/已过期",
                    "type": "integer"
                },
                "time": {
                    "description": "设定的时间：\"12:02\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "matter.FinishPayload": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "是否完成",
                    "type": "boolean"
                }
            }
        },
        "matter.GetResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "date": {
                    "description": "设定的日期：2020-11-01",
                    "type": "string"
                },
                "priority": {
                    "description": "优先级，0/1/2/3 =\u003e 无优先级/低优先级/中优先级/高优先级",
                    "type": "integer"
                },
                "state": {
                    "description": "状态：0/1/2 =\u003e 未完成/已完成/已过期",
                    "type": "integer"
                },
                "time": {
                    "description": "设定的时间：\"12:02\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "matter.ListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/matter.MatterInfo"
                    }
                }
            }
        },
        "matter.MatterInfo": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "date": {
                    "description": "设定的日期：2020-11-01",
                    "type": "string"
                },
                "priority": {
                    "description": "优先级，0/1/2/3 =\u003e 无优先级/低优先级/中优先级/高优先级",
                    "type": "integer"
                },
                "state": {
                    "description": "状态：0/1/2 =\u003e 未完成/已完成/已过期",
                    "type": "integer"
                },
                "time": {
                    "description": "设定的时间：\"12:02\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "matter.UpdateRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "date": {
                    "description": "设定的日期：2020-11-01",
                    "type": "string"
                },
                "priority": {
                    "description": "优先级，0/1/2/3 =\u003e 无优先级/低优先级/中优先级/高优先级",
                    "type": "integer"
                },
                "state": {
                    "description": "状态：0/1/2 =\u003e 未完成/已完成/已过期",
                    "type": "integer"
                },
                "time": {
                    "description": "设定的时间：\"12:02\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "user.GetResponse": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "qq": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.LoginRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "小程序 auth code",
                    "type": "string"
                }
            }
        },
        "user.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UpdateRequest": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "...",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "todo-list",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
